/*
Browse API

The Browse API has the following resources:<ul><li><b>item_summary:</b><br>Allows shoppers to search for specific items by keyword, GTIN, category, charity, product, image, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li><li><b>item:</b><br>Allows shoppers to retrieve the details of a specific item or all items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.<br><br>This resource also provides a bridge between the eBay legacy APIs, such as the <a href=\"/api-docs/user-guides/static/finding-user-guide-landing.html\" target=\"_blank\">Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li></ul>The <b>item_summary</b>, <b>search_by_image</b>, and <b>item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\" target=\"_blank\">Application access token</a>.

API version: v1.19.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package buybrowse

import (
	"encoding/json"
)

// checks if the AutoCorrections type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoCorrections{}

// AutoCorrections struct for AutoCorrections
type AutoCorrections struct {
	// The automatically spell-corrected keyword from the request.
	Q *string `json:"q,omitempty"`
}

// NewAutoCorrections instantiates a new AutoCorrections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoCorrections() *AutoCorrections {
	this := AutoCorrections{}
	return &this
}

// NewAutoCorrectionsWithDefaults instantiates a new AutoCorrections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoCorrectionsWithDefaults() *AutoCorrections {
	this := AutoCorrections{}
	return &this
}

// GetQ returns the Q field value if set, zero value otherwise.
func (o *AutoCorrections) GetQ() string {
	if o == nil || IsNil(o.Q) {
		var ret string
		return ret
	}
	return *o.Q
}

// GetQOk returns a tuple with the Q field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoCorrections) GetQOk() (*string, bool) {
	if o == nil || IsNil(o.Q) {
		return nil, false
	}
	return o.Q, true
}

// HasQ returns a boolean if a field has been set.
func (o *AutoCorrections) HasQ() bool {
	if o != nil && !IsNil(o.Q) {
		return true
	}

	return false
}

// SetQ gets a reference to the given string and assigns it to the Q field.
func (o *AutoCorrections) SetQ(v string) {
	o.Q = &v
}

func (o AutoCorrections) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoCorrections) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Q) {
		toSerialize["q"] = o.Q
	}
	return toSerialize, nil
}

type NullableAutoCorrections struct {
	value *AutoCorrections
	isSet bool
}

func (v NullableAutoCorrections) Get() *AutoCorrections {
	return v.value
}

func (v *NullableAutoCorrections) Set(val *AutoCorrections) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoCorrections) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoCorrections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoCorrections(val *AutoCorrections) *NullableAutoCorrections {
	return &NullableAutoCorrections{value: val, isSet: true}
}

func (v NullableAutoCorrections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoCorrections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


