/*
Browse API

The Browse API has the following resources:<ul><li><b>item_summary:</b><br>Allows shoppers to search for specific items by keyword, GTIN, category, charity, product, image, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li><li><b>item:</b><br>Allows shoppers to retrieve the details of a specific item or all items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.<br><br>This resource also provides a bridge between the eBay legacy APIs, such as the <a href=\"/api-docs/user-guides/static/finding-user-guide-landing.html\" target=\"_blank\">Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li></ul>The <b>item_summary</b>, <b>search_by_image</b>, and <b>item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\" target=\"_blank\">Application access token</a>.

API version: v1.19.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package buybrowse

import (
	"encoding/json"
)

// checks if the AspectDistribution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AspectDistribution{}

// AspectDistribution The type that define the fields for the aspect information. Aspects are the variations of an item, such as color, size, etc.
type AspectDistribution struct {
	// An array of containers for the various values of the aspect and the match count, and a HATEOAS reference (<code>refinementHref</code>) for this aspect.
	AspectValueDistributions []AspectValueDistribution `json:"aspectValueDistributions,omitempty"`
	// The name of an aspect, such as <i>Brand</i>, <i>Color</i>, etc.
	LocalizedAspectName *string `json:"localizedAspectName,omitempty"`
}

// NewAspectDistribution instantiates a new AspectDistribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAspectDistribution() *AspectDistribution {
	this := AspectDistribution{}
	return &this
}

// NewAspectDistributionWithDefaults instantiates a new AspectDistribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAspectDistributionWithDefaults() *AspectDistribution {
	this := AspectDistribution{}
	return &this
}

// GetAspectValueDistributions returns the AspectValueDistributions field value if set, zero value otherwise.
func (o *AspectDistribution) GetAspectValueDistributions() []AspectValueDistribution {
	if o == nil || IsNil(o.AspectValueDistributions) {
		var ret []AspectValueDistribution
		return ret
	}
	return o.AspectValueDistributions
}

// GetAspectValueDistributionsOk returns a tuple with the AspectValueDistributions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AspectDistribution) GetAspectValueDistributionsOk() ([]AspectValueDistribution, bool) {
	if o == nil || IsNil(o.AspectValueDistributions) {
		return nil, false
	}
	return o.AspectValueDistributions, true
}

// HasAspectValueDistributions returns a boolean if a field has been set.
func (o *AspectDistribution) HasAspectValueDistributions() bool {
	if o != nil && !IsNil(o.AspectValueDistributions) {
		return true
	}

	return false
}

// SetAspectValueDistributions gets a reference to the given []AspectValueDistribution and assigns it to the AspectValueDistributions field.
func (o *AspectDistribution) SetAspectValueDistributions(v []AspectValueDistribution) {
	o.AspectValueDistributions = v
}

// GetLocalizedAspectName returns the LocalizedAspectName field value if set, zero value otherwise.
func (o *AspectDistribution) GetLocalizedAspectName() string {
	if o == nil || IsNil(o.LocalizedAspectName) {
		var ret string
		return ret
	}
	return *o.LocalizedAspectName
}

// GetLocalizedAspectNameOk returns a tuple with the LocalizedAspectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AspectDistribution) GetLocalizedAspectNameOk() (*string, bool) {
	if o == nil || IsNil(o.LocalizedAspectName) {
		return nil, false
	}
	return o.LocalizedAspectName, true
}

// HasLocalizedAspectName returns a boolean if a field has been set.
func (o *AspectDistribution) HasLocalizedAspectName() bool {
	if o != nil && !IsNil(o.LocalizedAspectName) {
		return true
	}

	return false
}

// SetLocalizedAspectName gets a reference to the given string and assigns it to the LocalizedAspectName field.
func (o *AspectDistribution) SetLocalizedAspectName(v string) {
	o.LocalizedAspectName = &v
}

func (o AspectDistribution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AspectDistribution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AspectValueDistributions) {
		toSerialize["aspectValueDistributions"] = o.AspectValueDistributions
	}
	if !IsNil(o.LocalizedAspectName) {
		toSerialize["localizedAspectName"] = o.LocalizedAspectName
	}
	return toSerialize, nil
}

type NullableAspectDistribution struct {
	value *AspectDistribution
	isSet bool
}

func (v NullableAspectDistribution) Get() *AspectDistribution {
	return v.value
}

func (v *NullableAspectDistribution) Set(val *AspectDistribution) {
	v.value = val
	v.isSet = true
}

func (v NullableAspectDistribution) IsSet() bool {
	return v.isSet
}

func (v *NullableAspectDistribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAspectDistribution(val *AspectDistribution) *NullableAspectDistribution {
	return &NullableAspectDistribution{value: val, isSet: true}
}

func (v NullableAspectDistribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAspectDistribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


