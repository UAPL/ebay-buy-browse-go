/*
Browse API

The Browse API has the following resources:<ul><li><b>item_summary:</b><br>Allows shoppers to search for specific items by keyword, GTIN, category, charity, product, image, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li><li><b>item:</b><br>Allows shoppers to retrieve the details of a specific item or all items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.<br><br>This resource also provides a bridge between the eBay legacy APIs, such as the <a href=\"/api-docs/user-guides/static/finding-user-guide-landing.html\" target=\"_blank\">Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li></ul>The <b>item_summary</b>, <b>search_by_image</b>, and <b>item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\" target=\"_blank\">Application access token</a>.

API version: v1.19.9
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package buybrowse

import (
	"encoding/json"
)

// checks if the AddonService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddonService{}

// AddonService This container describes an add-on service that may be selected for an item or that may apply automatically. A charge may be associated with the add-on service.
type AddonService struct {
	// This field indicates whether the add-on service must be selected for the item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:AddonServiceSelectionEnum'>eBay API documentation</a>
	Selection *string `json:"selection,omitempty"`
	ServiceFee *ConvertedAmount `json:"serviceFee,omitempty"`
	// The ID number of the add-on service.
	ServiceId *string `json:"serviceId,omitempty"`
	// The type of add-on service, such as <code>AUTHENTICITY_GUARANTEE</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:AddonServiceTypeEnum'>eBay API documentation</a>
	ServiceType *string `json:"serviceType,omitempty"`
}

// NewAddonService instantiates a new AddonService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonService() *AddonService {
	this := AddonService{}
	return &this
}

// NewAddonServiceWithDefaults instantiates a new AddonService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonServiceWithDefaults() *AddonService {
	this := AddonService{}
	return &this
}

// GetSelection returns the Selection field value if set, zero value otherwise.
func (o *AddonService) GetSelection() string {
	if o == nil || IsNil(o.Selection) {
		var ret string
		return ret
	}
	return *o.Selection
}

// GetSelectionOk returns a tuple with the Selection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonService) GetSelectionOk() (*string, bool) {
	if o == nil || IsNil(o.Selection) {
		return nil, false
	}
	return o.Selection, true
}

// HasSelection returns a boolean if a field has been set.
func (o *AddonService) HasSelection() bool {
	if o != nil && !IsNil(o.Selection) {
		return true
	}

	return false
}

// SetSelection gets a reference to the given string and assigns it to the Selection field.
func (o *AddonService) SetSelection(v string) {
	o.Selection = &v
}

// GetServiceFee returns the ServiceFee field value if set, zero value otherwise.
func (o *AddonService) GetServiceFee() ConvertedAmount {
	if o == nil || IsNil(o.ServiceFee) {
		var ret ConvertedAmount
		return ret
	}
	return *o.ServiceFee
}

// GetServiceFeeOk returns a tuple with the ServiceFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonService) GetServiceFeeOk() (*ConvertedAmount, bool) {
	if o == nil || IsNil(o.ServiceFee) {
		return nil, false
	}
	return o.ServiceFee, true
}

// HasServiceFee returns a boolean if a field has been set.
func (o *AddonService) HasServiceFee() bool {
	if o != nil && !IsNil(o.ServiceFee) {
		return true
	}

	return false
}

// SetServiceFee gets a reference to the given ConvertedAmount and assigns it to the ServiceFee field.
func (o *AddonService) SetServiceFee(v ConvertedAmount) {
	o.ServiceFee = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *AddonService) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonService) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *AddonService) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *AddonService) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *AddonService) GetServiceType() string {
	if o == nil || IsNil(o.ServiceType) {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonService) GetServiceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceType) {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *AddonService) HasServiceType() bool {
	if o != nil && !IsNil(o.ServiceType) {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *AddonService) SetServiceType(v string) {
	o.ServiceType = &v
}

func (o AddonService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddonService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Selection) {
		toSerialize["selection"] = o.Selection
	}
	if !IsNil(o.ServiceFee) {
		toSerialize["serviceFee"] = o.ServiceFee
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.ServiceType) {
		toSerialize["serviceType"] = o.ServiceType
	}
	return toSerialize, nil
}

type NullableAddonService struct {
	value *AddonService
	isSet bool
}

func (v NullableAddonService) Get() *AddonService {
	return v.value
}

func (v *NullableAddonService) Set(val *AddonService) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonService) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonService(val *AddonService) *NullableAddonService {
	return &NullableAddonService{value: val, isSet: true}
}

func (v NullableAddonService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


